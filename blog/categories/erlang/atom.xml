<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Erlang | Ward Bekker]]></title>
  <link href="http://wardbekker.github.io/blog/categories/erlang/atom.xml" rel="self"/>
  <link href="http://wardbekker.github.io/"/>
  <updated>2013-04-25T12:16:25+02:00</updated>
  <id>http://wardbekker.github.io/</id>
  <author>
    <name><![CDATA[Ward Bekker]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Erlang Fprof output confusing? Try KCachegrind.]]></title>
    <link href="http://wardbekker.github.io/blog/2013/04/24/fprof-kcachegrind/"/>
    <updated>2013-04-24T16:13:00+02:00</updated>
    <id>http://wardbekker.github.io/blog/2013/04/24/fprof-kcachegrind</id>
    <content type="html"><![CDATA[<p>Your Erlang code is perfect, but to find out why other peoples
code runs dog slow you probably profile the code with <a href="http://www.erlang.org/doc/man/fprof.html">fprof</a> like this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(node@host)1> fprof:apply(module, function, [arguments]).
</span><span class='line'>(node@host)1> fprof:profile().
</span><span class='line'>(node@host)1> fprof:analyse({dest, "outfile.fprof"}).</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The printout of fprof analyse is a text dump of the result, which can
grow over 1000 lines and contains a lot of noise which makes it hard
to locate the bottlenecks. Below a truncated
sample of an actual fprof trace.</p>

<p><div><script src='https://gist.github.com/5458222.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<h2>KCachegrind</h2>

<p><a href="http://kcachegrind.sourceforge.net">KCachegrind</a> to the rescue! With this tool you can visually inspect the fprof
analyse result with sorting, a fancy call graph view, callee map and
more.</p>

<p><img src="/images/qcachegrind.png" width="750" height="750" title="image" alt="images"></p>

<p>As KCachegrind can't read fprof analysis output directly, you need to
convert it first to the callgrind format with the <a href="https://github.com/isacssouza/erlgrind">Erlgrind</a> script by <a href="https://twitter.com/isacssouza">Isac Sacchi e Souza</a>.
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./erlgrind_script outfile.fprof callgrind.001</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>KCachegrind &amp; Erlgrind Installation</h2>

<p>For installation of KCachegrind on my Mac I use
<a href="http://mxcl.github.io/homebrew/">Homebrew</a>, a package manager for OSX. Notice that you
install <em>qcachegrind</em>, the <a href="http://qt-project.org">QT</a> version of
KCachegrind.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew install qcachegrind
</span><span class='line'>$ brew instal graphviz
</span><span class='line'>$ sudo ln -s /usr/local/bin/dot /usr/bin/dot</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Installing the Erlgrind (<a href="https://github.com/isacssouza/erlgrind">Github</a>) script:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -O "https://raw.github.com/isacssouza/erlgrind/master/src/erlgrind"
</span><span class='line'>$ chmod +x erlgrind
</span><span class='line'>$ mv erlgrind /usr/local/bin/</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And open qcachegrind:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ open ~/Applications/qcachegrind.app</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Enjoy!</p>
]]></content>
  </entry>
  
</feed>
